{"version":3,"sources":["singlecolor.js","App.js","index.js"],"names":["SingleColor","rgb","weight","toHex","index","useState","alert","setAlert","value","rbc","join","useEffect","timeout","setTimeout","clearTimeout","className","style","background","onClick","navigator","clipboard","writeText","App","error","setError","Values","all","list","setList","color","setColor","onSubmit","e","preventDefault","newColor","console","log","type","onChange","target","placeholder","map","item","hex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA0BeA,EAxBI,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACrC,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAK,WAAOL,GACZM,EAAMR,EAAIS,KAAK,KAOrB,OANAC,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MAC3B,CAACN,IAEA,0BAASS,UAAS,gBAAWX,EAAQ,IAAM,eAC1CY,MAAO,CAACC,WAAW,OAAD,OAASR,EAAT,MAClBS,QAAS,WACLX,GAAS,GACTY,UAAUC,UAAUC,UAAUb,IAJnC,UAMC,oBAAGO,UAAU,gBAAb,UAA8Bb,EAA9B,OACA,oBAAGa,UAAU,cAAb,cAA6BZ,KAC5BG,EAAO,mBAAGS,UAAU,QAAb,iCAA+C,SCqBjDO,MAtCf,WACE,MAA0BjB,oBAAS,GAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAAuBnB,mBAAS,IAAIoB,IAAO,WAAWC,IAAI,KAA1D,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA0BvB,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KAeA,OACE,qCACE,0BAASf,UAAU,YAAnB,UACC,iDACG,uBAAMgB,SAjBO,SAACC,GACpBA,EAAEC,iBACF,IACA,IAAMC,EAAW,IAAIT,IAAOI,GAAOH,IAAI,IACvCE,EAAQM,GACRC,QAAQC,IAAIF,GAEZ,MAAMX,GACJC,GAAS,GACTW,QAAQC,IAAIb,KAQR,UACE,uBAAOc,KAAK,OAAQ7B,MAAOqB,EAAOS,SAAU,SAACN,GAAOF,EAASE,EAAEO,OAAO/B,QAASgC,YAAY,UAAUzB,UAAS,UAAKQ,EAAQ,QAAU,QACrI,wBAAQc,KAAK,SAAStB,UAAU,MAAhC,0BAGJ,yBAASA,UAAU,SAAnB,SACGY,EAAKc,KAAI,SAACC,EAAMtC,GACb,OACE,cAAC,EAAD,2BAA6BsC,GAA7B,IAAmCtC,MAAOA,EAAOD,MAAOuC,EAAKC,MAA3CvC,Y,MC5BlCwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c3856b4c.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\r\n\r\nconst SingleColor= ({rgb, weight, toHex, index}) => {\r\n    const [alert, setAlert] = useState(false);\r\n    const value = `#${toHex}`;\r\n    const rbc = rgb.join(',');\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n          setAlert(false);\r\n        }, 3000)\r\n        return () => clearTimeout(timeout);\r\n    }, [alert])\r\n    return (\r\n        <article className={`color ${index > 10 && 'color-light'}`}\r\n         style={{background: `rgb(${rbc})`}}\r\n         onClick={() => {\r\n             setAlert(true);\r\n             navigator.clipboard.writeText(value)\r\n         }}>\r\n         <p className='percent-value'>{weight}%</p>\r\n         <p className='color-value'>#{toHex}</p>\r\n         {alert? <p className='alert'>COPIED TO CLIPBOARD</p> : null}\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default SingleColor;","import React, {useState} from 'react';\nimport Values from 'values.js';\nimport SingleColor from './singlecolor';\n\nfunction App() {\n  const [error, setError] = useState(false);\n  const [list,setList] = useState(new Values('#f15025').all(10));\n  const [color, setColor] = useState('');\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    try{\n    const newColor = new Values(color).all(10);\n    setList(newColor);\n    console.log(newColor);\n    }\n    catch(error){\n      setError(true);\n      console.log(error);\n    }\n    \n  }\n  return (\n    <>\n      <section className='container'>\n       <h3>Color Generated</h3>\n          <form onSubmit={handelSubmit}>\n            <input type='text'  value={color} onChange={(e) => {setColor(e.target.value)}} placeholder='#f15025' className={`${error ? 'error' : null}`}/>\n            <button type='submit' className='btn'>Submit</button>\n          </form>\n        </section>\n        <section className='colors'>\n          {list.map((item, index) => {\n              return(\n                <SingleColor key={index} {...item} index={index} toHex={item.hex}/>\n              );\n          })} \n          </section>\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './app.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}